#!/usr/bin/env perl
# -*- perl -*-

=head1 NAME

users - Ganglia plugin to monitor the number of users logged in to a Unix box.

=head1 APPLICABLE SYSTEMS

Should work on any Unix that has the L<who>(1) command.

=head1 CONFIGURATION

None needed

=head1 INTERPRETATION

The plugin simply runs the L<who>(1) command and counts the number of
users logged in by different methods (tty, pty, X, etc).

=head1 BUGS

Logins or sessions that are not registered in C</var/run/utmp> as part
of the session setup will not be counted (this is a feature, not a
bug).

Only tested extensively on Linux.

=head1 VERSION


=head1 AUTHOR

Copyright (C) 2004-2008.

Original version by Michael Kaiser tools (at) micha (dot) de.
Modified and made more generic by Nicolai Langfeldt, 2006
Refactored from munin plugin for ganglia by uwaechte@uos.de, 2009

=head1 LICENSE

GPLv2

=cut

chomp(my $gmetric=`which gmetric`);
exit 0 if ($? != 0);

$tty = 0;
$pty = 0;
$pts = 0;
$X   = 0;
$unc = 0;  # Unclassified

open (WHO,"who |");

foreach (<WHO>) {
    (undef,$_,undef) = split /[\/ ]+/;
    $tty++,next if /ttyv?/; # Linux virtual console tty (on some hosts)
    $pty++,next if /pty|ttyp/;
    $pts++,next if /pts/;
    $tty++,next if /tty/;   # Regular tty

    $X++,next if (/:\d+/); # Linux style X screen
    $X++,next if (/X[0-9a-fA-F]*/); # Solaris style (ifi.uio.no only?)

    $unc++;
}

close (WHO);

my $gmetric="$gmetric --dmax=30000 --tmax=300 --type=uint8";
system "$gmetric --name=\"Users tty\" --value=$tty";
system "$gmetric --name=\"Users pty\" --value=$pty";
system "$gmetric --name=\"Users pts\" --value=$pts";
system "$gmetric --name=\"Users X11\" --value=$X";
system "$gmetric --name=\"Users other\" --value=$unc";
# vim:syntax=perl
